doctype html
html(lang="en")
    include head.pug
    body
        include navbar.pug

        section
            <div class="container">
                <h3>Password Generator</h3>

                <div class="output">
                    <span id="result"></span>
                    <button class="btn" id="clipboard">
                        <i class="fa fa-clipboard"></i>
                    </button>
                </div>

                <p id="hidden-text">You should write this password on a piece of paper and keep it in a safe place :)</p>

                <div class="form" id="form">
                    <div class="form-input">
                        <label for="password_length">Password length</label>
                        <input type="number" id="password-length" class="password-length" min='8' max='20' value='15'>
                    </div>
                    <div class="form-input">
                        <label for="uppercase">Include uppercase letters</label>
                        <input type="checkbox" id="uppercase" checked>
                    </div>
                    <div class="form-input">
                        <label for="lowercase">Include lowercase letters</label>
                        <input type="checkbox" id="lowercase" checked>
                    </div>
                    <div class="form-input">
                        <label for="numbers">Include numbers</label>
                        <input type="checkbox" id="numbers" checked>
                    </div>
                    <div class="form-input">
                        <label for="symbols">Include symbols</label>
                        <input type="checkbox" id="symbols" checked>
                    </div>

                    <button id="generate">Generate Password</button>
                </div>
                <br/>
                <small>The sample is based on <a href="https://github.com/Shivek-Sharma/password-generator">Shivek-Sharma/password-generator</a> GitHub repository.</small>
            </div>
        script.
            const result = document.getElementById('result');
            const clipboard = document.getElementById('clipboard');
            const hidden_text = document.getElementById('hidden-text');
            const password_length = document.getElementById('password-length');
            const uppercase = document.getElementById('uppercase');
            const lowercase = document.getElementById('lowercase');
            const numbers = document.getElementById('numbers');
            const symbols = document.getElementById('symbols');
            const generate = document.getElementById('generate');

            const randomFunc = {
                lower: getRandomLower,
                upper: getRandomUpper,
                numbers: getRandomNumber,
                symbols: getRandomSymbol
            }

            function getRandomLower() {
                return String.fromCharCode(Math.floor(Math.random() * 26) + 97);    //97 -> a
            }

            function getRandomUpper() {
                return String.fromCharCode(Math.floor(Math.random() * 26) + 65);    //65 -> A
            }

            function getRandomNumber() {
                return Math.floor(Math.random() * 10);
            }

            function getRandomSymbol() {
                const symbols = '!@#$%^&*(){}[]=<>/,.+-';
                return symbols[Math.floor(Math.random() * symbols.length)];
            }

            function generatePassword(length, lower, upper, numbers, symbols) {
                let generatedPassword = '';

                const checkedCount = lower + upper + numbers + symbols;

                if (checkedCount === 0) {
                    alert("Please check at least one option to generate password");
                    return "";
                }

                const checkedArr = [{ lower }, { upper }, { numbers }, { symbols }].filter(item => Object.values(item)[0]);

                for (let i = 0; i < length; i += checkedCount) {
                    checkedArr.forEach(checkedItem => {
                        const funcName = Object.keys(checkedItem)[0];
                        // console.log(funcName);

                        generatedPassword += randomFunc[funcName]();
                    });
                }

                const finalPassword = generatedPassword.slice(0, length);

                return finalPassword;
            }

            //Event Listeners
            generate.addEventListener('click', () => {
                const length = +password_length.value;
                const hasLower = lowercase.checked;
                const hasUpper = uppercase.checked;
                const hasNumbers = numbers.checked;
                const hasSymbols = symbols.checked;

                result.innerText = generatePassword(length, hasLower, hasUpper, hasNumbers, hasSymbols);

                hidden_text.style.display = 'flex';
            });

            //copy password to clipboard
            clipboard.addEventListener('click', () => {
                const password = result.innerText;

                const cb = navigator.clipboard;
                cb.writeText(password);
                alert("Password copied to clipboard!");

                //reference -> https://dev.to/tqbit/how-to-use-javascript-to-copy-text-to-the-clipboard-2hi2
            });

        include footer.html
